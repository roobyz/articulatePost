{
  "title": "Lorem ipsum dolor sit amet",
  "project": "Lorem One",
  "image": {
    "src": "john-schnobrich-2FPjlAyMQTA-unsplash.jpg",
    "alt": "Colleages working at a computer",
    "citation": "Photo by <a href='https://unsplash.com/@johnschno?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText'>John Schnobrich</a> on <a href='https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText'>Unsplash</a>"
  },
  "author": {
    "name": "Roberto Rivera",
    "url": "pages/about"
  },
  "dateCreated": "1/8/2021",
  "dateModified": "8/3/2021",
  "categories": [
    "Programming"
  ],
  "tags": [
    "Python",
    "Javascript"
  ],
  "featured": true,
  "draft": true,
  "articleBody": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque convallis purus vitae ipsum imperdiet condimentum. Nunc vel vehicula augue. Vestibulum luctus nulla nisl, at congue augue maximus et. Mauris eget massa dui. Cras sagittis accumsan lacus.<p>Example Quote:<blockquote><p>Dorothy followed her through many of the beautiful rooms in her castle.<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</blockquote><h2 id=install>Install</h2><p>List:<ul><li>This<li>That<li>and the Other</ul><p>An <strong>example</strong> JavaScript code.<pre class=language-js><code class=language-js><span class=\"token keyword\">const</span> srcPath <span class=\"token operator\">=</span> <span class=\"token string\">\"./articles/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dstPath <span class=\"token operator\">=</span> <span class=\"token string\">\"./content/posts/\"</span><span class=\"token punctuation\">;</span>\n\nfs<span class=\"token punctuation\">.</span><span class=\"token property-access function method\">watch</span><span class=\"token punctuation\">(</span>srcPath<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> persistent<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>event <span class=\"token operator\">=</span> <span class=\"token string\">\"change\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> srcFile <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> dstFile <span class=\"token operator\">=</span> srcFile<span class=\"token punctuation\">.</span><span class=\"token property-access function method\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".json\"</span><span class=\"token punctuation\">;</span>\n\n    processor<span class=\"token punctuation\">.</span><span class=\"token property-access function method\">process</span><span class=\"token punctuation\">(</span>\n      toVFile<span class=\"token punctuation\">.</span><span class=\"token property-access function method\">readSync</span><span class=\"token punctuation\">(</span>srcPath <span class=\"token operator\">+</span> srcFile<span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">throw</span> error<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name console\">console</span><span class=\"token punctuation\">.</span><span class=\"token property-access function method\">error</span><span class=\"token punctuation\">(</span><span class=\"token function\">reporter</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">||</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> jsonOutput <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n          schema<span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">frontmatter</span><span class=\"token punctuation\">,</span>\n          body<span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span><span class=\"token property-access\">contents</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">let</span> article <span class=\"token operator\">=</span> <span class=\"token class-name known-class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token property-access function method\">stringify</span><span class=\"token punctuation\">(</span>jsonOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access function method\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token language-regex regex-source\">\\n</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// console.log(article);</span>\n        fs<span class=\"token punctuation\">.</span><span class=\"token property-access function method\">writeFileSync</span><span class=\"token punctuation\">(</span>dstPath <span class=\"token operator\">+</span> dstFile<span class=\"token punctuation\">,</span> article<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><p>A <code>Python</code> code sample.<pre class=language-python><code class=language-python><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">import</span> doctest\n\n  doctest<span class=\"token punctuation\">.</span>testmod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  network <span class=\"token operator\">=</span> Perceptron<span class=\"token punctuation\">(</span>\n    sample<span class=\"token operator\">=</span>samples<span class=\"token punctuation\">,</span> target<span class=\"token operator\">=</span>exit<span class=\"token punctuation\">,</span> learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> epoch_number<span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> bias<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">)</span>\n  network<span class=\"token punctuation\">.</span>training<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Finished training perceptron\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter values to predict or q to exit\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    sample<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>samples<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      user_input <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> user_input <span class=\"token operator\">==</span> <span class=\"token string\">\"q\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n      observation <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>user_input<span class=\"token punctuation\">)</span>\n      sample<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> observation<span class=\"token punctuation\">)</span>\n    network<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span>\n</code></pre><h2 id=math>Math</h2><div class=\"math math-display\"><span class=katex-display><span class=katex><span class=katex-mathml><math display=block xmlns=http://www.w3.org/1998/Math/MathML><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>ρ</mi><msup><mi>v</mi><mn>2</mn></msup><mi>S</mi><msub><mi>C</mi><mi>L</mi></msub></mrow><annotation encoding=application/x-tex>L = \\frac{1}{2} \\rho v^2 S C_L</annotation></semantics></math></span><span class=katex-html aria-hidden=true><span class=base><span class=strut style=height:.68333em;vertical-align:0></span><span class=\"mord mathnormal\">L</span><span class=mspace style=margin-right:.2777777777777778em></span><span class=mrel>=</span><span class=mspace style=margin-right:.2777777777777778em></span></span><span class=base><span class=strut style=height:2.00744em;vertical-align:-.686em></span><span class=mord><span class=\"nulldelimiter mopen\"></span><span class=mfrac><span class=\"vlist-t vlist-t2\"><span class=vlist-r><span class=vlist style=height:1.32144em><span style=top:-2.314em><span class=pstrut style=height:3em></span><span class=mord><span class=mord>2</span></span></span><span style=top:-3.23em><span class=pstrut style=height:3em></span><span class=frac-line style=border-bottom-width:.04em></span></span><span style=top:-3.677em><span class=pstrut style=height:3em></span><span class=mord><span class=mord>1</span></span></span></span><span class=vlist-s>​</span></span><span class=vlist-r><span class=vlist style=height:.686em><span></span></span></span></span></span><span class=\"nulldelimiter mclose\"></span></span><span class=\"mord mathnormal\">ρ</span><span class=mord><span class=\"mord mathnormal\"style=margin-right:.03588em>v</span><span class=msupsub><span class=vlist-t><span class=vlist-r><span class=vlist style=height:.8641079999999999em><span style=top:-3.113em;margin-right:.05em><span class=pstrut style=height:2.7em></span><span class=\"mtight reset-size6 size3 sizing\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\"style=margin-right:.05764em>S</span><span class=mord><span class=\"mord mathnormal\"style=margin-right:.07153em>C</span><span class=msupsub><span class=\"vlist-t vlist-t2\"><span class=vlist-r><span class=vlist style=height:.32833099999999993em><span style=top:-2.5500000000000003em;margin-left:-.07153em;margin-right:.05em><span class=pstrut style=height:2.7em></span><span class=\"mtight reset-size6 size3 sizing\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=vlist-s>​</span></span><span class=vlist-r><span class=vlist style=height:.15em><span></span></span></span></span></span></span></span></span></span></span></div><h2 id=license>License</h2><p>MIT"
}